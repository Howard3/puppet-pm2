#!/bin/bash
#
# pm2 Process manager for NodeJS
# 
# chkconfig: 345 80 20
# 
# description: PM2 next gen process manager for Node.js
# processname: pm2
#
### BEGIN INIT INFO
# Provides:      pm2
# Required-Start: $local_fs $remote_fs
# Required-Stop: $local_fs $remote_fs
# Should-Start: $network
# Should-Stop: $network
# Default-Start:    2 3 4 5
# Default-Stop:     0 1 6
# Short-Description: PM2 init script
# Description: PM2 is the next gen process manager for Node.js
### END INIT INFO

name=pm2
PM2=<%= @pm2_dir %>/bin/pm2
USER=<%= @deamon_user %>

export PATH=$PATH:<%= @pm2_dir %>/bin
export HOME="<%= @install_path %>"

lockfile="/var/lock/subsys/pm2"
if [ ! -d /var/run/pm2 ]
then
  echo creating /var/run/pm2
  mkdir /var/run/pm2
fi

# verify $USER has permissions on the /var/run/pm2 directory,
# which is normally owned by root
chown -R $USER:$USER /var/run/pm2
chmod -R 755 /var/run/pm2

if [ ! -d /var/log/pm2 ]
then
  echo creating /var/log/pm2
  mkdir /var/log/pm2
fi

# verify $USER has permissions on the /var/log/pm2 directory,
# which is normally owned by root
chown -R $USER:$USER /var/log/pm2
chmod -R 755 /var/log/pm2

super() {
  su - $USER -c "PATH=$PATH; $*"
}

start() {
  echo "Starting $name"
  super $PM2 resurrect
  retval=$?

#  echo "Starting $name monitoring api"
#  $PM2 list | grep Pm2Http9615 | grep online >/dev/null 2>&1
 # [ $? -ne 0 ] &&  super $PM2 web

#  [ $retval -eq 0 ] && touch $lockfile
}

stop() {
  echo "Stopping $name"
  super $PM2 dump
  super $PM2 delete all
  super $PM2 kill
  rm -f $lockfile
}

restart() {
  echo "Restarting $name"
  stop
  start
}

reload() {
  echo "Reloading $name"
  super $PM2 reload all
}

status() {
  echo "Status for $name:"
  super $PM2 list
  RETVAL=$?
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    restart
    ;;
  reload)
    reload
    ;;
  *)
    echo "Usage: {start|stop|status|restart|reload}"
    exit 1
    ;;
esac
exit $RETVAL
